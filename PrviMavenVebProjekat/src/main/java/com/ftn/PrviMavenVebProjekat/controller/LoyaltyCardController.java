package com.ftn.PrviMavenVebProjekat.controller;

import com.ftn.PrviMavenVebProjekat.model.LoyaltyCard;
import com.ftn.PrviMavenVebProjekat.model.LoyaltyCardRequest;
import com.ftn.PrviMavenVebProjekat.model.User;
import com.ftn.PrviMavenVebProjekat.service.LoyaltyCardRequestService;
import com.ftn.PrviMavenVebProjekat.service.LoyaltyCardService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import javax.servlet.http.HttpSession;
import java.time.LocalDateTime;

@Controller
@RequestMapping("/loyaltyCard")
public class LoyaltyCardController {


    @Autowired
    private LoyaltyCardService loyaltyCardService;

    @Autowired
    private LoyaltyCardRequestService loyaltyCardRequestService;

    @GetMapping
    public String getLoyaltyCard(HttpSession session, Model model) {
        User loggedInUser = (User) session.getAttribute("LOGGED_IN_USER");
        if (loggedInUser != null) {
            // Proveri da li korisnik već ima loyalty karticu
            LoyaltyCard loyaltyCard = loyaltyCardService.findByUserId(loggedInUser.getId());
            model.addAttribute("loyaltyCard", loyaltyCard);

            // Proveri da li korisnik već ima zahtev u tabeli loyalty_card_requests
            LoyaltyCardRequest existingRequest = loyaltyCardRequestService.findByUserId(loggedInUser.getId());
            model.addAttribute("existingRequest", existingRequest);
        }
        return "loyaltyCard";
    }

    @PostMapping("/sendRequest")
    public String sendLoyaltyCardRequest(HttpSession session, Model model) {
        User loggedInUser = (User) session.getAttribute("LOGGED_IN_USER");
        if (loggedInUser != null) {
            // Check if a request already exists
            LoyaltyCardRequest existingRequest = loyaltyCardRequestService.findByUserId(loggedInUser.getId());
            if (existingRequest == null) {
                LoyaltyCardRequest request = new LoyaltyCardRequest(
                        null, // id will be generated by the database
                        loggedInUser.getId(),
                        loggedInUser.getName(),
                        loggedInUser.getLastName(),
                        loggedInUser.getEmail(),
                        LocalDateTime.now()
                );
                loyaltyCardRequestService.save(request); // Save the request to the database
                model.addAttribute("message", "Request has been sent successfully!");
                model.addAttribute("requestSent", true);
            } else {
                model.addAttribute("message", "You have already sent a request.");
                model.addAttribute("requestSent", false);
            }
        } else {
            model.addAttribute("message", "You must be logged in to send a request.");
            model.addAttribute("requestSent", false);
        }
        return "loyaltyCard"; // Redirect back to the loyaltyCard page or show a message on the same page
    }



}